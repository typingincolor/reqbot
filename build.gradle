buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'findbugs'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

configurations {
    all*.exclude group: 'logback'
    all*.exclude group: 'log4j'
    compile.exclude module: "sping-boot-starter-tomcat"
}

findbugs {
    ignoreFailures true
    effort = "max"
    reportLevel = "medium"
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-undertow')
    compile('com.google.guava:guava:18.0')
    compile('org.apache.commons:commons-pool2:2.3')
    compile('com.google.code.gson:gson:2.3.1')
    compile('redis.clients:jedis:2.6.2')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('uk.co.modular-it:hamcrest-date:0.9.5')
    testCompile('commons-lang:commons-lang:2.6')
    testCompile('org.cthul:cthul-matchers:1.1.0')
}

task stage(type: Copy, dependsOn: [clean, bootRepackage, installDist]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'reqbot.jar'
    }
}
stage.mustRunAfter(clean)
uploadArchives.dependsOn bootRepackage

clean << {
    project.file('reqbot.jar').delete()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

test {
    jacoco {
        append false
    }
    useJUnit {
        excludeCategories 'com.losd.reqbot.test.IntegrationTest'
    }
}

task integrationTest(type: Test) {

}

integrationTest {
    useJUnit {
        includeCategories 'com.losd.reqbot.test.IntegrationTest'
    }
}
